openapi: 3.0.3
info:
  title: Otto Retail Products API
  description: |-
    # OTTO Retail Products API Developer's Guide
    This specification describes the OTTO Retail Products API.
  version: 1.0.0
servers:
  - url: https://retail-api-sandbox.otto.de
    description: Sandbox
  - url: https://retail-api.otto.de
    description: Production
paths:
  /products/brands:
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            description: The brands page number that you want to get.
            default: 0
            minimum: 0
        - in: query
          name: pageSize
          schema:
            type: integer
            description: The number of brands returned per page.
            default: 100
            minimum: 10
            maximum: 1000
      summary: List of allowed brands
      description: >-
        Read the list of brands. The list of brands will be paginated. Brands
        consist of a name, and a corresponding brand id. The brand id will be
        used when you submit your product data. The default page length is 100
        entries per response, the page size upper limit is 1000. The links
        specified in the result can be used to page through the total result
        space. Note that there will be no prev link on the first page and no
        next link on the last page.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: >-
            The technical user is not authorized to read the list of known
            brands. this may be the case if the user does not have the necessary
            role.
  /products/category-groups:
    get:
      parameters:
        - in: query
          name: page
          description: The category group page number that you want to get.
          schema:
            type: integer
            description: The product categories page you want to get
            default: 0
            minimum: 0
        - in: query
          name: pageSize
          description: The number of category groups returned per page.
          schema:
            type: integer
            description: The number of categories per page
            default: 100
            minimum: 10
            maximum: 1000
      summary: Get an overview of all available product category groups
      description: >-
        Returns the list of possible category groups. Generally the resulting
        product categories values will be paginated. The default page length is
        100 product category groups per response, the page size limit is 2000.
        The links specified in the result can be used to page through the total
        result space.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryGroupsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: >-
            The technical user is not authorized to read the list of category
            groups. This may be the case if the user does not have the necessary
            role.
  /products/category-groups/{categoryGroupId}:
    get:
      parameters:
        - in: path
          name: categoryGroupId
          required: true
          schema:
            type: string
            format: uuid
            description: >-
              The id of the category group that you want to query. The id can be
              obtained via the category group list endpoint.
      summary: >-
        Get a specific product category group based on the product category
        group id
      description: >-
        Returns the details of the requested category group. The id of the
        category group can be obtained via the category group list endpoint (Get
        an overview of all available product category groups).
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryGroupDTO'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: >-
            The technical user is not authorized to read the requested category
            group. This may be the case, if the user does not have the necessary
            role.
        '404':
          description: A product category group with the given id cannot be found.
  /products:
    post:
      summary: Create or update product variations
      description: >-
        Endpoint to create or update product variations. Returns a jobId to
        query results.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListDTO'
      responses:
        '200':
          description: Job created. The upload and validation process can take a while.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusDTO'
        '400':
          description: The request body is no valid JSON document
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: >-
            The technical user is not authorized to post products to this
            endpoint. This may be the case if the user does not have the
            necessary role.
  /products/job/{jobId}:
    get:
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
            format: uuid
            description: >-
              The jobId in UUID format that you get after you upload one or
              several products.
      summary: Get the upload status of your products
      description: >-
        Returns detailed information about the requested jobId. You will receive
        the jobId after creating or updating product variations.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusDTO'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: >-
            The technical user is not authorized to request jobs. This may be
            the case if the user does not have the necessary role.
        '404':
          description: A job with the given jobId cannot be found.
components:
  schemas:
    BrandDTO:
      description: A specific brand
      required:
        - id
        - name
        - usable
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The brand id which you have to use with your product data uploads
          nullable: false
          example: 570ece74-dd53-480b-ba9a-60935241fa76
        name:
          type: string
          nullable: false
          description: >-
            The name of the brand. Use this name to find the brand of your
            products in the list of available brands
          example: Example Brand
        usable:
          type: boolean
          nullable: false
          description: >-
            True if you can use this brand, false if not. Expect that this value
            can change over time for a given brand.
          example: true
          default: true
    LinkDTO:
      required:
        - rel
        - href
      type: object
      properties:
        rel:
          type: string
          nullable: false
          example: self
          description: >-
            Defines the type of link relationship between the current resource
            and the resource which the link points to.
        href:
          nullable: false
          type: string
          example: /products?page=0&page_size=100
          description: Defines the URL to the linked resource.
    PageDTO:
      description: Pagination information object.
      required:
        - size
        - number
        - totalElements
        - totalPages
      type: object
      properties:
        size:
          type: integer
          nullable: false
          example: 5
          description: Number of entries specified in the query.
        number:
          type: integer
          description: The page requested.
          nullable: false
          example: 0
        totalElements:
          type: integer
          description: Number of all entries.
          nullable: false
          example: 50
        totalPages:
          type: integer
          description: Total number of pages.
          nullable: false
          example: 10
    BrandResponse:
      required:
        - brands
        - _links
        - _page
      type: object
      properties:
        brands:
          description: A list of brands.
          type: array
          items:
            $ref: '#/components/schemas/BrandDTO'
        _links:
          description: A list of links that can be used for pagination.
          type: array
          items:
            $ref: '#/components/schemas/LinkDTO'
        _page:
          $ref: '#/components/schemas/PageDTO'
    CategoryGroupOverviewDTO:
      description: A specific category group.
      required:
        - name
        - id
        - categories
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          description: >-
            The category group id which you have to use when querying the
            category group endpoint and use with your product data uploads.
          example: 246273a7-5288-3537-bc4f-7ba80cc3d929
        name:
          type: string
          description: The name of the category group.
          nullable: false
          example: Fotokameras
        categories:
          description: The list of the contained categories within this category group.
          type: array
          items:
            type: string
          example:
            - Kompaktkamera
            - Systemkamera
    ProductCategoryGroupsResponse:
      required:
        - categoryGroups
        - _links
        - _page
      type: object
      properties:
        categoryGroups:
          description: A list of category groups.
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/CategoryGroupOverviewDTO'
        _links:
          description: A list of links that can be used for pagination.
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/LinkDTO'
        _page:
          $ref: '#/components/schemas/PageDTO'
    AttributeDTO:
      description: Attribute information object.
      properties:
        name:
          description: Name of the attribute
          type: string
          nullable: false
          example: Anzahl Serienbilder pro Sekunde
        description:
          description: Description of the attribute
          type: string
          nullable: true
          example: >-
            Die Anzahl an Bildern pro Sekunde, die als Serie aufgenommen werden
            können.
        attributeGroup:
          type: string
          nullable: false
          description: Attributes can be clustered, e.g. disposition, pricing, etc.
          example: Kamerafunktionen
        type:
          description: >-
            Defines the format of the attribute value, such as string, integer,
            etc.
          enum:
            - DECIMAL
            - STRING
            - INTEGER
            - DATE
            - BOOLEAN
          type: string
          nullable: true
          example: DECIMAL
        unit:
          description: >-
            Unit of the attribute. The values must be submitted in this
            specified unit. If the unit is not null, it has to be submitted as
            well.
          type: string
          nullable: true
          example: BpS
        unitDisplayName:
          description: Unit display name of the attribute
          type: string
          nullable: false
          example: Bilder pro Sekunde
        multiValue:
          type: boolean
          description: >-
            If the value is true, several values can be transferred for this
            attribute (polyvalence attribute); otherwise, only a single value
            may be transferred for this attribute.
          nullable: false
          example: false
        allowedValues:
          type: array
          description: Only the listed values are permitted for the attribute.
          items:
            type: string
          example:
            - '1'
            - 2,5
            - 4,2
            - '40'
        exampleValues:
          description: Example values for the attribute.
          type: array
          items:
            type: string
          example:
            - 4,2
        attributeLevel:
          type: string
          description: >-
            Specifies if the attribute is specified on the variation or product
            level (unique for all variations of the product).
          enum:
            - PRODUCT
            - VARIATION
          example: PRODUCT
        featureRelevance:
          description: >-
            Describes what the attribute can be used for and where it gets
            displayed in the shop.
          type: array
          items:
            type: string
            example: FILTER, NAVIGATION, SEARCH
        necessity:
          description: Describes if the attribute is mandatory, recommended or optional.
          type: string
          enum:
            - MANDATORY
            - RECOMMENDED
            - OPTIONAL
          example: RECOMMENDED
    CategoryGroupDTO:
      description: A specific category group with its attributes.
      required:
        - id
        - name
        - categories
        - attributes
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          description: >-
            The id of the category group. You will have to use this id when you
            submit your product data.
          example: 246273a7-5288-3537-bc4f-7ba80cc3d929
        name:
          type: string
          nullable: false
          description: The name of the category group
          example: Fotokameras
        categories:
          description: The list of categories that are contained in this category group.
          type: array
          items:
            type: string
          example:
            - Kompaktkamera
            - Systemkamera
        attributes:
          description: List of attributes for this category group.
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/AttributeDTO'
    NameValuesDTO:
      description: Attribute object.
      type: object
      required:
        - name
        - values
      properties:
        name:
          type: string
          nullable: false
          description: The name of the describing attribute, like 'Farbe' or 'Größe'.
          example: exampleAttribute
        values:
          type: array
          minItems: 1
          maxItems: 500
          nullable: false
          items:
            type: string
          description: The values for the given attribute, like 'rot' or 'S'.
          example:
            - exampleValue
            - anotherExampleValue
        unit:
          type: string
          description: >-
            The unit of the attribute. If the attribute has a unit according to
            the category groups endpoint, the unit is required.
          example: cm
    PriceDTO:
      description: Price information object.
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          type: number
          nullable: false
          description: >-
            Holds the value of the monetary amount expressed in a currency, e.g.
            EUR. The number format expects a decimal point, like 10.99. Numbers
            without a decimal point are taken as a unit of the given currency,
            e.g. 10 is taken as 10 EUR.
          example: 39.99
        currency:
          type: string
          nullable: false
          enum:
            - EUR
          description: "Holds the currency of the monetary amount expressed as a shortcut according to ISO 4217 and http://publications.europa.eu/code/de/de-5000700.htm NOTE: Currently the only allowed currency code is \"EUR\". All other currency codes will be rejected.\t"
    PricingDTO:
      required:
        - purchasingPrice
      type: object
      properties:
        purchasingPrice:
          $ref: '#/components/schemas/PriceDTO'
          nullable: false
          description: This container holds the purchasing price information.
        msrp:
          description: >-
            This container holds the manufacturer's suggested retail price
            information (UVP).
          $ref: '#/components/schemas/PriceDTO'
      description: >-
        This container holds the attributes for the different price types and
        currency related information.
    MediaAssetDTO:
      description: Media Asset information object.
      type: object
      required:
        - location
        - type
      properties:
        location:
          nullable: false
          type: string
          format: url
          description: >-
            The location of the media asset as a valid URL (see
            http://www.ietf.org/rfc/rfc2396.txt and
            http://www.ietf.org/rfc/rfc2732.txt) with a maximum length of 2083
            characters.
          example: https://upload.wikimedia.org/wikipedia/en/a/a9/Example.jpg
        type:
          nullable: false
          type: string
          enum:
            - IMAGE
            - DIMENSIONAL_DRAWING
            - ENERGY_EFFICIENCY_LABEL
            - MATERIAL_SAMPLE
            - PRODUCT_DATASHEET
            - USER_MANUAL
            - MANUFACTURER_WARRANTY
            - SAFETY_DATASHEET
            - ASSEMBLY_INSTRUCTIONS
            - WARNING_LABEL
          description: The type of the provided media asset.
    PackingUnitDTO:
      description: Packing unit information object.
      required:
        - id
        - height
        - width
        - length
        - weight
      properties:
        id:
          type: string
          nullable: false
          description: The id of the packing unit.
          example: PACK-1
        height:
          type: number
          nullable: false
          description: >-
            The height of a packing unit in cm. The number format expects a
            decimal point, like 10.99. Numbers without a decimal point are taken
            as a unit of the given currency, e.g. 10 is taken as 10 cm.
          example: '23.99'
        width:
          type: number
          nullable: false
          description: >-
            The width of a packing unit in cm. The number format expects a
            decimal point, like 10.99. Numbers without a decimal point are taken
            as a unit of the given currency, e.g. 10 is taken as 10 cm.
          example: '33'
        length:
          type: number
          nullable: false
          description: >-
            The length of a packing unit in cm. The number format expects a
            decimal point, like 10.99. Numbers without a decimal point are taken
            as a unit of the given currency, e.g. 10 is taken as 10 cm.
          example: '45'
        weight:
          type: number
          nullable: false
          description: >-
            The weight of a packing unit in kg. The number format expects a
            decimal point, like 10.99. Numbers without a decimal point are taken
            as a unit of the given currency, e.g. 10 is taken as 10 kg.
          example: '10'
        description:
          type: string
          description: The description of the packing unit.
          example: Tischbeine
    VariationDTO:
      description: >-
        Variation information object. This container holds the variation
        information.
      required:
        - sku
        - pricing
      type: object
      properties:
        sku:
          type: string
          nullable: false
          description: >-
            Identifier for a product variation, provided by the supplier. The
            sku can be freely assigned but it must be unique within the complete
            product catalog of a supplier. It is used as the variation key and
            you can reference your variations using the sku.
          example: VAR-XY-123
        ean:
          type: string
          description: >-
            The EAN (European Article Number), also known as GTIN (Global Trade
            Item Number), is a worldwide unique article number for variations,
            which is assigned by GS1.
          example: '1234567890123'
        pricing:
          $ref: '#/components/schemas/PricingDTO'
        mediaAssets:
          type: array
          items:
            $ref: '#/components/schemas/MediaAssetDTO'
          description: >-
            A list of media assets describing this product variation. You can
            specify pdfs and images. If you specify an image, the following
            restrictions apply: only static images of the types JPG or PNG with
            a RGB color space and the images have to have a minimum size of 480
            x 960 pixel and a maximum width of 4500 pixel for each side.
        packingUnits:
          type: array
          items:
            $ref: '#/components/schemas/PackingUnitDTO'
          description: The list of packing units information.
        attributes:
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/NameValuesDTO'
          description: >-
            Lists all the descriptive information about a variation that might
            be individual for all the variations of your product. The object
            must be provided in the form of key values pairs.  The list of key
            value pairs and their configuration (data type, multiplicity, etc.)
            can be obtained from the structure endpoint and depends on the
            categoryGroup. All attributes with "attributeLevel"=""VARIATION" can
            be provided in this array. All objects must be identical for all
            variations of a product.
    ProductDTO:
      description: >-
        Product information object. This container holds the product
        information.
      type: object
      required:
        - productReference
        - brandId
        - supplierCode
        - categoryGroupId
        - category
        - variations
      properties:
        productReference:
          type: string
          nullable: false
          description: >-
            The productReference groups all variations, that you want to combine
            into one product. You should therefore use a value that makes sense
            for all variations of the product and does not refer to any
            specifics of a particular variation. The productReference can be
            freely assigned but it must be unique within the complete product
            catalog of a supplier. It is used as the product key and you can
            reference your products via the productReference.
          example: DQU16
        brandId:
          type: string
          format: uuid
          nullable: false
          description: >-
            Denotes the brand ID of a product. Brands and the mapping of their
            names to brand Ids can be retrieved via the brand endpoint. Must be
            identical for all variations of a product.
          example: 434efd7a-499c-4d2a-9d9f-2636097a4051
        supplierCode:
          type: string
          nullable: false
          description: >-
            Denotes your supplier code that you have received from Otto to
            identify your company. Must be identical for all variations of a
            product.
          example: '12345'
        categoryGroupId:
          type: string
          format: uuid
          nullable: false
          description: >-
            Denotes the id of the assortment group (like 'Fernseher' or
            'T-shirt') of the product. The list of allowed categoryGroupId's can
            be retrieved via the structure endpoint. Must be identical for all
            variations of a product.
          example: b2e03856-e99f-475a-9d97-d4be8ed15d7e
        category:
          type: string
          nullable: false
          description: >-
            Denotes the assortment type of the product (like "OLED-Fernseher").
            Must be identical for all variations of a product.
          example: OLED-Fernseher
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/NameValuesDTO'
          description: >-
            Lists all the descriptive information about a product that are
            common for all the variations of your product. The object must be
            provided in the form of key values pairs. The list of key value
            pairs and their configuration (data type, multiplicity, etc.) can be
            obtained from the structure endpoint and depends on the
            categoryGroup. All attributes with "attributeLevel"="PRODUCT" can be
            provided in this array. All objects must be identical for all
            variations of a product.
        variations:
          type: array
          nullable: false
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/VariationDTO'
          description: Lists all the variations of the product.
    ProductListDTO:
      type: array
      items:
        $ref: '#/components/schemas/ProductDTO'
    ViolationDetailDTO:
      description: Violation detail information object.
      properties:
        detail:
          description: Detailed error information.
          type: string
          nullable: false
          enum:
            - SUPPLIER_CODE
            - BRAND_ID
            - ATTRIBUTE
            - CATEGORY
            - UNIT
            - CATEGORY_GROUP_ID
            - MEDIA_ASSET_URL
            - EAN
            - UNKNOWN
          example: EXAMPLE_DETAIL
        value:
          description: The value of the corresponding detail.
          type: string
          nullable: false
          example: exampleValue
    ConstraintViolationDTO:
      description: Constraint violation information object.
      properties:
        title:
          description: A short description of the error code.
          type: string
          example: Example description of the code
        code:
          description: The error code.
          type: string
          enum:
            - ATTRIBUTE_IS_UNKNOWN
            - ATTRIBUTE_LEVEL_IS_INVALID
            - ATTRIBUTE_UNIT_IS_INVALID
            - ATTRIBUTE_VALUE_CONTAINS_MORE_THAN_TWO_DECIMAL_PLACES
            - ATTRIBUTE_VALUE_EXCEEDS_MAX_LENGTH
            - ATTRIBUTE_VALUE_IS_INVALID
            - ATTRIBUTE_VALUE_IS_NOT_BOOLEAN
            - ATTRIBUTE_VALUE_IS_NOT_DATE
            - ATTRIBUTE_VALUE_IS_NOT_DATE_TIME
            - ATTRIBUTE_VALUE_IS_NOT_DECIMAL
            - ATTRIBUTE_VALUE_IS_NOT_INTEGER
            - ATTRIBUTE_VALUE_IS_NOT_POSITIVE
            - ATTRIBUTE_VALUE_IS_ZERO
            - BRAND_ID_IS_UNKNOWN
            - CATEGORY_GROUP_ID_IS_UNKNOWN
            - CATEGORY_IS_UNKNOWN
            - EAN_IS_INVALID
            - EAN_IS_NOT_UNIQUE_WITHIN_PRODUCT
            - EAN_IS_NOT_UNIQUE_WITHIN_SUPPLIER_CODE
            - ILLEGAL_OPERATING_MODEL
            - INVALID_PACKING_UNITS
            - LEGACY_PRODUCT_UPDATE_REQUIRES_ALL_VARIATIONS
            - LEGACY_SKU_EAN_IS_MISSING
            - LEGACY_SKU_IS_ASSOCIATED_TO_DIFFERENT_PRODUCT
            - MATERIAL_COMPONENTS_ARE_NOT_NAMED
            - MATERIAL_COMPONENTS_DO_NOT_CONTAIN_ANY_MATERIAL
            - MATERIAL_COMPOSITION_IS_INVALID
            - MEDIA_ASSET_COLOR_SCHEME_IS_NOT_ALLOWED
            - MEDIA_ASSET_DIMENSIONS_ARE_NOT_SUFFICIENT
            - MEDIA_ASSET_FILE_TYPE_IS_NOT_SUPPORTED
            - MEDIA_ASSET_FILE_TYPE_MUST_BE_COMPATIBLE_WITH_ROLE
            - MEDIA_ASSET_IS_NOT_ACCESSIBLE
            - MEDIA_ASSET_IS_NOT_AVAILABLE
            - MEDIA_ASSET_IS_NOT_PROCESSABLE
            - MEDIA_ASSET_PROTOCOL_IS_UNKNOWN
            - MEDIA_ASSET_SIZE_EXCEEDS_LIMIT
            - MEDIA_ASSET_TYPE_IS_NOT_SUPPORTED
            - MEDIA_ASSET_URI_IS_INVALID
            - MISSING_DELIVERY_TYPE
            - MISSING_PACKING_UNITS
            - MISSING_VARIATION_TO_UPDATE_PRODUCT_ATTRIBUTE
            - PACKING_UNIT_ID_EXCEEDS_MAX_LENGTH
            - PACKING_UNIT_ID_IS_NOT_UNIQUE
            - PERMISSION_IS_MISSING_FOR_SUPPLIER_CODE
            - RECOMMENDED_ATTRIBUTE_IS_MISSING
            - SKU_IS_ASSOCIATED_TO_DIFFERENT_PRODUCT
            - SKU_IS_NOT_UNIQUE_IN_PRODUCT
            - SUPPLIER_CODE_IS_NOT_AUTHORIZED
            - SUPPLIER_CODE_IS_UNKNOWN
            - SUPPLIER_PRICE_IS_REQUIRED
            - UNKNOWN
            - UNKNOWN_DELIVERY_TYPE
            - UNKNOWN_OPERATING_MODEL
          example: EXAMPLE_CODE
        details:
          description: Further details concerning the error code.
          type: array
          items:
            $ref: '#/components/schemas/ViolationDetailDTO'
    VariationResponseDTO:
      description: Variation response object.
      required:
        - sku
        - status
        - errors
        - warnings
      properties:
        sku:
          description: The affected sku.
          type: string
          nullable: false
          example: VAR-XY-123
        status:
          description: The status of the variation.
          type: string
          nullable: false
          enum:
            - ACCEPTED
            - NOT_ACCEPTED
            - IN_PROGRESS
        errors:
          description: This container contains the errors that have occurred.
          type: array
          items:
            $ref: '#/components/schemas/ConstraintViolationDTO'
        warnings:
          description: This container contains the warnings that have occurred.
          type: array
          items:
            $ref: '#/components/schemas/ConstraintViolationDTO'
    ProductResponseDTO:
      description: Product response object.
      required:
        - productReference
        - status
        - errors
        - warnings
        - variations
      properties:
        productReference:
          description: The affected product reference.
          type: string
          nullable: false
          example: DQU16
        status:
          description: The status of the product.
          type: string
          nullable: false
          enum:
            - ACCEPTED
            - PARTIALLY_ACCEPTED
            - NOT_ACCEPTED
            - IN_PROGRESS
        errors:
          description: This container contains the errors that have occurred.
          type: array
          items:
            $ref: '#/components/schemas/ConstraintViolationDTO'
        warnings:
          description: This container contains the warnings that have occurred.
          type: array
          items:
            $ref: '#/components/schemas/ConstraintViolationDTO'
        variations:
          description: >-
            This container holds the response information for each variation
            transmitted.
          type: array
          items:
            $ref: '#/components/schemas/VariationResponseDTO'
    JobStatusDTO:
      description: Job status response information object.
      properties:
        jobId:
          description: The jobId for the product data transmission.
          type: string
          format: uuid
          nullable: false
          example: 570ece74-dd53-480b-ba9a-60935241fa76
        processed:
          description: Number of processed products.
          type: integer
          nullable: false
          example: 1
        total:
          description: Total number of products sent.
          type: integer
          nullable: false
          example: 10
        products:
          description: >-
            This container holds the response information for each product
            transmitted.
          type: array
          items:
            $ref: '#/components/schemas/ProductResponseDTO'
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
